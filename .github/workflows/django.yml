name: Django CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.11]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_NAME }}
          POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: 'Create env file'
      run: |
          mkdir -p backend/.envs/local/
          echo "${{ secrets.ENV_FILE }}" > backend/.envs/local/.env
    - name: Install Dependencies ${{ matrix.python-version }}
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements/dev.txt
    - name: Setup test database
      run: |
        export DATABASE_URL=postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
    - name: Run migrations
      run: |
        export DATABASE_URL=postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
        export GITHUB_WORKFLOW=True
        export MODE=workflow
        python backend/manage.py makemigrations
        python backend/manage.py migrate
        python backend/manage.py migrate --run-syncdb
        python backend/manage.py check
    - name: Run Tests
      env:
        DATABASE_URL: postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
        GITHUB_WORKFLOW: True
        MODE: workflow
      run: |
        pytest --create-db -r fEx --cov backend/apps
    - name: Code Coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
    - name: Upload coverage reports to Codecov
      run: |
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov -t ${CODECOV_TOKEN}
